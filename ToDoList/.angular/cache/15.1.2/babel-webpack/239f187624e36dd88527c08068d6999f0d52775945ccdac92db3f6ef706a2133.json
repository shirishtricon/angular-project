{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.serviceURL = 'http://localhost:3000/tasks';\n  }\n  addTask(task) {\n    return this.http.post(this.serviceURL, task);\n  }\n  getAllTask() {\n    return this.http.get(this.serviceURL);\n  }\n  deleteTask(task) {\n    return this.http.delete(this.serviceURL + '/' + task.id);\n  }\n  editTask(task) {\n    return this.http.put(this.serviceURL + '/' + task.id, task);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,UAAU,GAAG,6BAA6B;EACjD;EAEAC,OAAO,CAACC,IAAU;IAChB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,UAAU,EAACE,IAAI,CAAC;EACnD;EAEAE,UAAU;IACR,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,UAAU,CAAC;EAC/C;EAEAM,UAAU,CAACJ,IAAU;IACnB,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAO,IAAI,CAACP,UAAU,GAAC,GAAG,GAACE,IAAI,CAACM,EAAE,CAAC;EAC5D;EAEAC,QAAQ,CAACP,IAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAO,IAAI,CAACV,UAAU,GAAC,GAAG,GAACE,IAAI,CAACM,EAAE,EAACN,IAAI,CAAC;EAC9D;;AAtBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["CrudService","constructor","http","serviceURL","addTask","task","post","getAllTask","get","deleteTask","delete","id","editTask","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular Practice\\ToDoList\\src\\app\\service\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Task } from '../model/task';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  serviceURL: string ;\n\n  constructor(private http : HttpClient) { \n    this.serviceURL = 'http://localhost:3000/tasks'\n  }\n\n  addTask(task: Task): Observable<Task>{\n    return this.http.post<Task>(this.serviceURL,task);\n  }\n\n  getAllTask(): Observable<Task[]>{\n    return this.http.get<Task[]>(this.serviceURL);\n  }\n\n  deleteTask(task: Task): Observable<Task>{\n    return this.http.delete<Task>(this.serviceURL+'/'+task.id);\n  }\n\n  editTask(task: Task): Observable<Task>{\n    return this.http.put<Task>(this.serviceURL+'/'+task.id,task);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}