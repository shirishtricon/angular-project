{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n  }\n  ngOnInit() {\n    this.taskObj = new Task();\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTasks().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Ubable to get ist of tasks\");\n    });\n  }\n  addTask(etask) {\n    this.crudService.addTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit;\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 26,\n  vars: 0,\n  consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter tasks\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [1, \"m-3\"], [1, \"p-2\", \"shadow\", \"border\"], [1, \"input-group\", \"row\", \"ps-3\"], [1, \"card\", \"col-md-10\", \"border-0\"], [1, \"btn\", \"btn-outline-primary\", \"col\", \"me-2\"], [1, \"btn\", \"btn-outline-danger\", \"col\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"To Do List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8);\n      i0.ɵɵelement(10, \"input\", 9);\n      i0.ɵɵelementStart(11, \"button\", 10);\n      i0.ɵɵtext(12, \"+\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"h4\", 11);\n      i0.ɵɵtext(14, \"Tasks : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13)(17, \"div\", 14)(18, \"div\", 15)(19, \"div\", 16);\n      i0.ɵɵtext(20, \"Subscribe to code logic\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 17);\n      i0.ɵɵtext(22, \"e\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 18);\n      i0.ɵɵtext(24, \"X\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(25, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,oBAAoB;;;AASzC,OAAM,MAAOC,kBAAkB;EAO7BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAL/B,YAAO,GAAU,IAAIH,IAAI,EAAE;IAC3B,YAAO,GAAY,EAAE;IAErB,iBAAY,GAAY,EAAE;EAEqB;EAE/CI,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAIL,IAAI,EAAE;IACzB,IAAI,CAACM,UAAU,EAAE;EACnB;EACAA,UAAU;IACR,IAAI,CAACH,WAAW,CAACI,WAAW,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MAC7C,IAAI,CAACC,OAAO,GAAGD,GAAG;IACpB,CAAC,EAAEE,GAAG,IAAG;MACPC,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAC,OAAO,CAACC,KAAW;IACjB,IAAI,CAACX,WAAW,CAACU,OAAO,CAACC,KAAK,CAAC,CAACN,SAAS,CAACC,GAAG,IAAG;MAC9C,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,EAAEO,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAAC;IACZ,CAAC,CAAC;EACJ;EAEAI,QAAQ;IACN,IAAI,CAACZ,WAAW,CAACY,QAAQ,CAAC,IAAI,CAACV,OAAO,CAAC,CAACG,SAAS,CAACC,GAAG,IAAG;MACtD,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,EAAEO,GAAG,IAAG;MACPC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAI,UAAU,CAACF,KAAW;IACpB,IAAI,CAACX,WAAW,CAACa,UAAU,CAACF,KAAK,CAAC,CAACN,SAAS,CAACC,GAAG,IAAG;MACjD,IAAI,CAACL,QAAQ;IACf,CAAC,EAAEO,GAAG,IAAG;MACPC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC;EACJ;;AA3CWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,8BAAsC;MAG1BA,yBAAuB;MACvBA,8BAAsC;MAGQA,0BAAU;MAAAA,iBAAK;MAGzDA,8BAAoB;MAEZA,4BAAkE;MAClEA,mCAAsD;MAAAA,kBAAC;MAAAA,iBAAS;MAIxEA,+BAA8B;MAAAA,yBAAQ;MAAAA,iBAAK;MAE3CA,gCAA6C;MAIQA,wCAAuB;MAAAA,iBAAM;MAClEA,mCAAiD;MAAAA,kBAAC;MAAAA,iBAAS;MAC3DA,gCAAwC;MAAAA,kBAAC;MAAAA,iBAAM;MAOnEA,0BAAuB;MAC3BA,iBAAM","names":["Task","DashboardComponent","constructor","crudService","ngOnInit","taskObj","getAllTask","getAllTasks","subscribe","res","taskArr","err","alert","addTask","etask","editTask","deleteTask","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Angular Practice\\ToDoList\\src\\app\\component\\dashboard\\dashboard.component.ts","D:\\Angular Practice\\ToDoList\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = '';\n\n  constructor(private crudService: CrudService){ }\n\n  ngOnInit(): void {\n    this.taskObj = new Task();\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTasks().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Ubable to get ist of tasks\");\n    })\n  }\n\n  addTask(etask: Task){\n    this.crudService.addTask(etask).subscribe(res => {\n      this.ngOnInit()\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask(){\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\")\n    });\n  }\n\n  deleteTask(etask: Task){\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit\n    }, err => {\n      alert(\"Failed to delete task\")\n    })\n  }\n\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n        <div class=\"row mt-4\" style=\"height:500px\">\n            <div class=\"col\"></div>\n            <div class=\"col-md-6 bg-white shadow\">\n\n                <div class=\"card bg-warning mt-4\">\n                    <h4 class=\"text-white ps-3 pt-2 pb-2\">To Do List</h4>\n                </div>\n\n                <div class=\"shadow\">\n                    <div class=\"input-group p-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter tasks\">\n                        <button class=\"btn btn-outline-success\" type=\"button\">+</button>\n                      </div>\n                </div>\n\n                <h4 class=\"text-primary mt-4\">Tasks : </h4>\n\n                <div style=\"overflow-y: auto; height: 350px\">\n                    <div class=\"m-3\">\n                        <div class=\"p-2 shadow border\">\n                            <div class=\"input-group row ps-3\">\n                                <div class=\"card col-md-10 border-0\">Subscribe to code logic</div>\n                                <button class=\"btn btn-outline-primary col me-2\">e</button>\n                                <div class=\"btn btn-outline-danger col\">X</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n            <div class=\"col\"></div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}